/* You have been given a table named sales with the following columns:

order_id (unique identifier for each order)
order_date (date when the order was placed)
product_id (unique identifier for each product)
quantity (the quantity of the product ordered in that particular order)
price_per_unit (the price per unit of the product)
Write an SQL query to find out the total sales revenue generated for each month in the year 2023.
*/
----------------------------------------------------------------
solution
----------------------------------------------------------------


CREATE TABLE sales (
    order_id INT PRIMARY KEY,
    order_date DATE,
    product_id INT,
    quantity INT,
    price_per_unit DECIMAL(10, 2)
);

INSERT INTO sales (order_id, order_date, product_id, quantity, price_per_unit) VALUES
(1, '2023-01-10', 101, 5, 20.00),
(2, '2023-01-15', 102, 2, 50.00),
(3, '2023-02-05', 103, 10, 15.00),
(4, '2023-02-20', 104, 3, 100.00),
(5, '2023-03-12', 101, 4, 20.00),
(6, '2023-03-25', 103, 7, 15.00),
(7, '2023-04-02', 105, 8, 30.00),
(8, '2023-04-15', 106, 1, 200.00),
(9, '2023-05-10', 102, 5, 50.00),
(10, '2023-06-18', 104, 6, 100.00),
(11, '2023-07-22', 103, 9, 15.00),
(12, '2023-07-30', 106, 2, 200.00),
(13, '2023-08-05', 101, 3, 20.00),
(14, '2023-09-10', 105, 4, 30.00),
(15, '2023-10-25', 103, 7, 15.00),
(16, '2023-11-11', 106, 2, 200.00),
(17, '2023-12-20', 102, 5, 50.00),
(18, '2022-12-15', 101, 4, 20.00), -- previous year to test filter
(19, '2024-01-01', 103, 5, 15.00); -- next year to test filter

-------------------------
My query
-----------------------------
SELECT 
    MONTH(order_date) AS month,
    SUM(quantity * price_per_unit) AS total_revenue
FROM sales
WHERE YEAR(order_date) = 2023
GROUP BY MONTH(order_date)
ORDER BY month;
